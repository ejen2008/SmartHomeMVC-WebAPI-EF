@using WebApplicationMVC.Views.Helpers
@using WebApplicationMVC.Models
@using SmartHome
@model DeviceDataView

<article id="device">
    @if (Model.DeviceActive != null && Model.DeviceList.Count > 0)
    {
        <div class="col-xs-6 col-sm-push-3 devicePadding deviceBorder row form">

            @using (Html.BeginForm())
            {
                IDevicable device = Model.DeviceActive;

                //"./DeleteDevice"
                <span id="nameDevice" class="col-xs-11  text-center  devicePadding deviceName">@device.Name</span>
                @Html.ActionLinkImage("delete", Url.Content("~/Content/button-trash.png"), "/Main/DeleteDevice", "btn-md", "btn-danger imageButtonIcon", "Удалить устройство")
                string title = device.Name + " выкл.";
                if (device.State == true)
                {
                    title = device.Name + " вкл.";
                }
                <img id="deviceIcon" class="col-xs-6 devicePadding imageIconDevice" src="@Url.Content(Model.LinkIconDevice(device))" title="@title" />

                <div id="NavigationDevice">
                    @{

                        title = "Включить устройство";
                        string cssClass = "btn-danger imageButtonIcon";
                        string cssClassImageButton = "btn-success imageButtonIcon";
                        string cssClassTextBox = "col-xs-1 input-md devicePadding";
                        string cssSizeButton = "btn-md";
                        if (device.State == true)
                        {
                            title = "Выключить устройство";
                            cssClass = cssClassImageButton;
                        }
                    }
                    @Html.ActionLinkImage("onOff", Url.Content("~/Content/button-OnOff.png"), "/Main/OnOffDevice", cssSizeButton, cssClass, title)


                    <span class="text-error" id="text-error">
                        @if (Model.Message != null)
                        {
                            @Model.Message;
                        }
                        <br />
                    </span>
                    @*@if (Model.Message != null)
                        {
                            <span class="text-error">@Model.Message</span>
                        }
                        else
                        {
                            <br />
                        }*@
                    <br />
                    @{
                        string nameButton = "buttonSubmit";
                        string cssClassImageButtonSubmit = "imageButtonSubmit";
                        string cssClassButtonSubmit = "btn-success buttonSubmit devicePadding";
                        if (device is IVolumenable)
                        {
                            @Html.TextBox("volume", ((IVolumenable)device).Volume, new { id = "TextBoxVolume", title = "Установить громкость", @class = cssClassTextBox, type = "number" });
                            @Html.ButtonImageSubmit(nameButton, cssClassButtonSubmit, "volume", Url.Content("~/Content/button-ok.png"), cssClassImageButtonSubmit, "Установить уровень громкости");
                            @Html.ActionLinkImage("volumeDown", Url.Content("~/Content/button-volumeDown.png"), "/Main/Volume/Down", cssSizeButton, cssClassImageButton, "Уменьшить громкость");
                            @Html.ActionLinkImage("volumeUp", Url.Content("~/Content/button-volumeUp.png"), "/Main/Volume/Up", cssSizeButton, cssClassImageButton, "Увеличить громкость");
                            @Html.ActionLinkImage("volumeMute", Url.Content("~/Content/button-volumeMute.png"), "/Main/Volume/Mute", cssSizeButton, cssClassImageButton, "Отключить звук");
                            <br />

                        }

                        if (device is ISwitchable)
                        {
                            string titleTextBox = "Установить канал";
                            string titlePrev = "Предыдущий канал";
                            string titleNext = "Следующий канал";
                            if (device is IVolumenable && device is ISwitchable && device is IBassable)
                            {
                                titleTextBox = "Установить трек";
                                titlePrev = "Предыдущий трек";
                                titleNext = "Следующий трек";
                            }
                            @Html.TextBox("current", ((ISwitchable)device).Current, new { id = "TextBoxSwich", title = titleTextBox, @class = cssClassTextBox, type = "number" });
                            @Html.ButtonImageSubmit(nameButton, cssClassButtonSubmit, "current", Url.Content("~/Content/button-ok.png"), cssClassImageButtonSubmit, titleTextBox);
                            @Html.ActionLinkImage("chanelPrevios", Url.Content("~/Content/button-previos.png"), "/Main/Chanel/Previos", cssSizeButton, cssClassImageButton, titlePrev);
                            @Html.ActionLinkImage("chanelNext", Url.Content("~/Content/button-next.png"), "/Main/Chanel/Next", cssSizeButton, cssClassImageButton, titleNext);
                            <br />
                        }

                        if (device is ITemperaturable)
                        {
                            @Html.TextBox("temperature", ((ITemperaturable)device).Temperature, new { id = "TextBoxTemp", title = "Установить температуру", @class = cssClassTextBox, type = "number" });
                            @Html.ButtonImageSubmit(nameButton, cssClassButtonSubmit, "temperature", Url.Content("~/Content/button-ok.png"), cssClassImageButtonSubmit, "Установить уровень температуры");
                            @Html.ActionLinkImage("tempDown", Url.Content("~/Content/button-down.png"), "/Main/Temperature/Down", cssSizeButton, cssClassImageButton, "Уменьшить температуру");
                            @Html.ActionLinkImage("tempUp", Url.Content("~/Content/button-up.png"), "/Main/Temperature/Up", cssSizeButton, cssClassImageButton, "Увеличить температуру");
                            <br />
                        }

                        if (device is IBassable)
                        {
                            @Html.TextBox("bass", ((IBassable)device).BassLevel, new { id = "TextBoxBass", title = "Установить уровень бассов", @class = cssClassTextBox, type = "number" });
                            @Html.ButtonImageSubmit(nameButton, cssClassButtonSubmit, "bass", Url.Content("~/Content/button-ok.png"), cssClassImageButtonSubmit, "Установить уровень бассов");
                            @Html.ActionLinkImage("bassDown", Url.Content("~/Content/button-down.png"), "/Main/Bass/Down", cssSizeButton, cssClassImageButton, "Уменьшить уровень бассов");
                            @Html.ActionLinkImage("bassUp", Url.Content("~/Content/button-up.png"), "/Main/Bass/Up", cssSizeButton, cssClassImageButton, "Увеличить уровень бассов");
                            <br />
                        }

                        if (device is ISpeedAirable)//набор кнопок для управления вентилятором
                        {
                            string cssClassImageButtonOff = "btn-danger imageButtonIcon";
                            string cssClassButtonLow = cssClassImageButton;
                            string cssClassButtonMedium = cssClassImageButton;
                            string cssClassButtonHight = cssClassImageButton;
                            if (((ISpeedAirable)device).LevelSpeed == Speed.Low)
                            {
                                cssClassButtonLow = cssClassImageButtonOff;
                            }
                            if (((ISpeedAirable)device).LevelSpeed == Speed.Medium)
                            {
                                cssClassButtonMedium = cssClassImageButtonOff;
                            }
                            if (((ISpeedAirable)device).LevelSpeed == Speed.Hight)
                            {
                                cssClassButtonHight = cssClassImageButtonOff;
                            }

                            @Html.ActionLinkImage("speedAirLow", Url.Content("~/Content/button-low.png"), "/Main/SpeedAir/Low", cssSizeButton, cssClassButtonLow, "Низкая интенсивность");
                            @Html.ActionLinkImage("speedAirMedium", Url.Content("~/Content/button-medium.png"), "/Main/SpeedAir/Medium", cssSizeButton, cssClassButtonMedium, "Средняя интенсивность");
                            @Html.ActionLinkImage("speedAirHight", Url.Content("~/Content/button-hight.png"), "/Main/SpeedAir/Hight", cssSizeButton, cssClassButtonHight, "Высокая интенсивность");
                            <br />
                        }
                    }

                </div>
                        }


        </div>
                        }
</article>
